services:
  mongo:
    image: mongo
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./src/infrastructure/databases/mongo:/mongo-init
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped

  # Service pour Nest
  nest:
    image: node:latest
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://root:password@mongo:27017/app?authSource=admin
      - DATABASE_URL=postgres://root:password@postgres:5432/app
      - JWT_SECRET=secret
      - MAILER_SERVICE=Gmail
      - MAILER_HOST=smtp.gmail.com
      - MAILER_PORT=465
      # - MAILER_ADDRESS=
      # - MAILER_PASSWORD=
      - BASE_URL=http://localhost:3000
      - NODE_ENV=development
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./src/infrastructure/frameworks/nest:/home/node/app
    working_dir: /home/node/app
    command: > 
      bash -c "npm install && 
               npm install @nestjs/core @nestjs/common @nestjs/cli @nestjs/platform-express reflect-metadata rxjs &&
               npm run start:dev"
    restart: unless-stopped
    depends_on:
      - mongo
      - postgres

  # Service pour Express
  express:
    image: node:latest
    environment:
      - PORT=3001
      - MONGO_URL=mongodb://root:password@mongo:27017/app?authSource=admin
      - DATABASE_URL=postgres://root:password@postgres:5432/app
      - JWT_SECRET=secret
      - MAILER_SERVICE=Gmail
      - MAILER_HOST=smtp.gmail.com
      - MAILER_PORT=465
      # - MAILER_ADDRESS=
      # - MAILER_PASSWORD=
      - BASE_URL=http://localhost:3001
      - NODE_ENV=development
    ports:
      - "127.0.0.1:3001:3001"  # Express sur le port 3001
    volumes:
      - ./src/infrastructure/frameworks/express:/home/node/app
    working_dir: /home/node/app
    command: > 
      bash -c "npm install &&
               npm install express &&
               npm install -D @types/express &&
               npm run start:dev"
    restart: unless-stopped
    depends_on:
      - mongo
      - postgres

  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app
    restart: unless-stopped

  nginx:
    image: nginx
    environment:
      - TZ=Europe/Paris
      - PUID=1000
      - PGID=1000
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./serv/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/usr/share/nginx/html
      - ./serv/certbot/conf:/etc/letsencrypt/:ro
      - ./serv/certbot/www:/var/www/certbot/:rw
      - ./serv/nginx/log:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - express
      - nest

  certbot:
    image: certbot/certbot
    environment:
      - TZ=Europe/Paris
      - PUID=1000
      - PGID=1000
    volumes:
      - ./serv/certbot/conf:/etc/letsencrypt/:rw
      - ./serv/certbot/www:/var/www/certbot/:rw
    depends_on:
      - nginx

  fail2ban:
    image: lscr.io/linuxserver/fail2ban:latest
    environment:
      - TZ=Europe/Paris
      - PUID=1000
      - PGID=1000
      - VERBOSITY=-vv #optional
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./serv/fail2ban:/config
      - ./serv/nginx/log:/var/log/nginx
      - /var/log:/var/log

  samba:
    image: dperson/samba
    environment:
      TZ: 'Europe/Paris'
    networks:
      - default
    ports:
      - "139:139/tcp"
      - "466:466/tcp"
    read_only: false
    tmpfs:
      - /tmp
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - ./:/projet:z
    command: '-s "projet;/projet;yes;no;no;johan,erwan,melvin" 
              -u "johan;johan" 
              -u "erwan;erwan" 
              -u "melvin;melvin" -p'

  adminer:
    image: adminer
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    restart: unless-stopped

volumes:
  mongo-data: {}
  postgres-data: {}

networks:
  default: